name: Generate Episode (every other day)

on:
  schedule:
    - cron: "0 9 * * *"   # run daily at 09:00 UTC (11:00 CEST)
  workflow_dispatch:

permissions:
  contents: write   # needed to commit/push generated files

jobs:
  generate:
    runs-on: ubuntu-latest
    steps:
      - name: Decide every-other-day (UTC)
        id: decide
        run: |
          doy=$(date -u +%j)  # 001..366
          if [ $((doy % 2)) -eq 0 ]; then
            echo "run=true" >> "$GITHUB_OUTPUT"
            echo "Proceeding (even day-of-year: $doy)."
          else
            echo "run=false" >> "$GITHUB_OUTPUT"
            echo "Skipping today (odd day-of-year: $doy)."
          fi

      - name: Check out repo
        if: steps.decide.outputs.run == 'true'
        uses: actions/checkout@v4
        with:
          persist-credentials: true   # keep GITHUB_TOKEN in origin for workspace repo

      - name: Set up Python
        if: steps.decide.outputs.run == 'true'
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
          cache-dependency-path: "requirements.txt"

      - name: Install dependencies
        if: steps.decide.outputs.run == 'true'
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install openai pillow requests pyyaml markdown
          fi

      - name: Set PYTHONPATH to repo root
        if: steps.decide.outputs.run == 'true'
        run: echo "PYTHONPATH=$PWD" >> "$GITHUB_ENV"

      - name: Configure git identity
        if: steps.decide.outputs.run == 'true'
        run: |
          git config --global user.name  "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Authenticate git everywhere with GITHUB_TOKEN
        if: steps.decide.outputs.run == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Rewrite any GitHub URL (https or ssh-style) to include the token
          git config --global url."https://x-access-token:${GITHUB_TOKEN}@github.com/".insteadOf "https://github.com/"
          git config --global url."https://x-access-token:${GITHUB_TOKEN}@github.com/".insteadOf "git@github.com:"
          # Fallback credential helper for any remaining prompts
          git config --global credential.helper '!f() { echo username=x-access-token; echo "password=${GITHUB_TOKEN}"; }; f'

      - name: Run generator
        if: steps.decide.outputs.run == 'true'
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GITHUB_TOKEN:   ${{ secrets.GITHUB_TOKEN }}
          GIT_TRACE: "1"
          GIT_CURL_VERBOSE: "1"
        run: python scripts/generate_episode.py
